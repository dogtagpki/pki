{
  "comments": [
    {
      "key": {
        "uuid": "6ce3541c_a27c519a",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-05-26T15:31:20Z",
      "side": 1,
      "message": "Is there a reason we are creating Success and Failure events?\n\nIn the KRA, we went the other direction and created single events with Outcome\u003dSuccess/Failure\n\nI thought that this is what we decided to do?\n\n\nOh, I see -- one event, but two classes here for success and failure.  I guess that works.",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecdcba17_278d24f9",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-05-26T15:32:50Z",
      "side": 1,
      "message": "Though from a code consistency perspective -- why a success/ failure class in the one case, and one case in another?",
      "parentUuid": "6ce3541c_a27c519a",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de497210_bd29b8b1",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-05-26T16:03:59Z",
      "side": 1,
      "message": "It\u0027s because we have conflicting method signatures. For a Success with Info the signature is (String, BigInteger, String). For a Failure with FailureReason the signature is exactly the same.\n\nA possible alternative is to use a properly named factory methods, for example:\n\n  DeltaCRLGenerationEvent successEvent \u003d\n      DeltaCRLGenerationEvent.createSuccessEvent(\n          subjectId, crlNumber, info\n      );\n\n  DeltaCRLGenerationEvent failureEvent \u003d\n      DeltaCRLGenerationEvent.createFailureEvent(\n          subjectId, crlNumber, reason\n      );",
      "parentUuid": "ecdcba17_278d24f9",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74c72556_f8c54438",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-05-26T16:34:42Z",
      "side": 1,
      "message": "I think my preference here would be factory methods.  Six months from now someone will have no idea why we selected one mechanism over the other.  Using factory methods makes that explicit.\n\nOver time, as method signatures change, we could end up with success and failure classes for all the events.\n\nAlso, by using one class, there will be a strict 1-1 relationship between audit event types and Event classes.",
      "parentUuid": "de497210_bd29b8b1",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6385f442_db2ea1c8",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-05-26T18:10:10Z",
      "side": 1,
      "message": "I\u0027ve combined the classes and added factory methods in the new patch.",
      "parentUuid": "74c72556_f8c54438",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0aa3311d_d34d45fe",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 2614,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-05-26T16:03:59Z",
      "side": 1,
      "message": "The \"No Revoked Certificates\" case will resume after this line.",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4822650_ea312bad",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 2766,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-05-26T15:34:43Z",
      "side": 1,
      "message": "Is this correct?  In the past, we would have thrown an exception here which would have short circuited any additional processing in the caller function.  Are we still doing the same thing?",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d5bf408_13423823",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 2766,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-05-26T16:03:59Z",
      "side": 1,
      "message": "In the old code the EBaseException was originally caught by line 2807 which logs a failure and then continue with delta CRL publishing (which is unnecessary) and the rest of updateCRLNow().\n\nIn the new code it will return from generateDeltaCRL(), so it will skip delta CRL publishing, but continue with the rest of updateCRLNow().",
      "parentUuid": "a4822650_ea312bad",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f92bae24_160829b1",
        "filename": "base/ca/src/com/netscape/ca/CRLIssuingPoint.java",
        "patchSetId": 1
      },
      "lineNbr": 3223,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-05-26T15:31:20Z",
      "side": 1,
      "message": "We really should try to get these centralized somewhere.  OK for this patch , but we\u0027e starting to proliferate these.",
      "revId": "b9c13319fab53431420aad64bda947b37fd312f3",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}