name: PKI NSS CLI with HSM

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string

jobs:
  # https://github.com/dogtagpki/pki/wiki/PKI-NSS-CLI
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Retrieve runner image
        uses: actions/cache@v3
        with:
          key: pki-tools-runner-${{ inputs.os }}-${{ github.run_id }}
          path: pki-tools-runner.tar

      - name: Load runner image
        run: docker load --input pki-tools-runner.tar

      - name: Set up runner container
        run: |
          tests/bin/runner-init.sh pki
        env:
          HOSTNAME: pki.example.com

      - name: Create HSM token
        run: |
          docker exec pki dnf install -y dnf-plugins-core softhsm
          docker exec pki softhsm2-util --init-token \
              --label HSM \
              --so-pin Secret.123 \
              --pin Secret.123 \
              --free
          docker exec pki softhsm2-util --show-slots

          # create password.conf
          echo "internal=" > password.conf
          echo "hardware-HSM=Secret.123" >> password.conf

      - name: Create key in HSM
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-key-create | tee output

          # get key ID
          sed -n 's/^\s*Key ID:\s*\(\S\+\)\s*$/\1/p' output > ca_signing_key_id

      - name: Verify key in HSM
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-key-find | tee output

          sed -n 's/\s*Key ID:\s*\(\S\+\)\s*$/\L\1/p' output > actual
          diff ca_signing_key_id actual

          # verify key not in internal token
          docker exec pki pki \
              -f $SHARED/password.conf \
              nss-key-find | tee actual
          echo -n "" > expected
          diff expected actual

      # https://github.com/dogtagpki/pki/wiki/Generating-CA-Signing-CSR-with-PKI-NSS
      - name: Generate CA signing cert request with existing key in HSM
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-request \
              --key-id $(cat ca_signing_key_id) \
              --subject "CN=Certificate Authority" \
              --ext /usr/share/pki/server/certs/ca_signing.conf \
              --csr ca_signing.csr
          docker exec pki openssl req -text -noout -in ca_signing.csr

          docker exec pki certutil -K -d /root/.dogtag/nssdb || true

          echo "Secret.123" > password.txt
          docker exec pki certutil -K \
              -d /root/.dogtag/nssdb \
              -f $SHARED/password.txt \
              -h HSM

      # https://github.com/dogtagpki/pki/wiki/Issuing-CA-Signing-Certificate-with-PKI-NSS
      - name: Issue self-signed CA signing cert
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-issue \
              --csr ca_signing.csr \
              --ext /usr/share/pki/server/certs/ca_signing.conf \
              --cert ca_signing.crt
          docker exec pki openssl x509 -text -noout -in ca_signing.crt

      - name: Import CA signing cert into internal token and HSM
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-import \
              --cert ca_signing.crt \
              --trust CT,C,C \
              ca_signing

      - name: Verify CA signing cert in internal token
        run: |
          echo "CT,C,C" > expected

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output
          sed -n 's/^ca_signing\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-cert-show ca_signing | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          # verify key not in internal token
          docker exec pki pki \
              -f $SHARED/password.conf \
              nss-key-find \
              --nickname ca_signing | tee actual
          echo -n "" > expected
          diff actual expected

      - name: Verify CA signing cert in HSM
        run: |
          echo "CTu,Cu,Cu" > expected

          docker exec pki certutil -L \
              -d /root/.dogtag/nssdb \
              -h HSM \
              -f $SHARED/password.txt | tee output
          sed -n 's/^HSM:ca_signing\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-show \
              HSM:ca_signing | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          echo rsa > expected

          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-key-find \
              --nickname HSM:ca_signing | tee output
          sed -n 's/\s*Type:\s*\(\S\+\)\s*$/\L\1/p' output > actual
          diff actual expected

      # https://github.com/dogtagpki/pki/wiki/Generating-SSL-Server-CSR-with-PKI-NSS
      - name: Create SSL server cert request with key in HSM
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-request \
              --subject "CN=pki.example.com" \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              --csr sslserver.csr
          docker exec pki openssl req -text -noout -in sslserver.csr

          docker exec pki certutil -K -d /root/.dogtag/nssdb || true

          docker exec pki certutil -K \
              -d /root/.dogtag/nssdb \
              -f $SHARED/password.txt \
              -h HSM

      # https://github.com/dogtagpki/pki/wiki/Issuing-SSL-Server-Certificate-with-PKI-NSS
      - name: Issue SSL server cert
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-issue \
              --issuer HSM:ca_signing \
              --csr sslserver.csr \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              --cert sslserver.crt
          docker exec pki openssl x509 -text -noout -in sslserver.crt

      - name: Import SSL server cert into internal token and HSM
        run: |
          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-import \
              --cert sslserver.crt \
              sslserver

      - name: Verify SSL server cert in internal token
        run: |
          echo ",," > expected

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output
          sed -n 's/^sslserver\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-cert-show sslserver | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          # verify key not in internal token
          docker exec pki pki \
              -f $SHARED/password.conf \
              nss-key-find \
              --nickname sslserver | tee actual
          echo -n "" > expected
          diff actual expected

      - name: Verify SSL server cert in HSM
        run: |
          echo "u,u,u" > expected

          docker exec pki certutil -L \
              -d /root/.dogtag/nssdb \
              -h HSM \
              -f $SHARED/password.txt | tee output
          sed -n 's/^HSM:sslserver\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-cert-show \
              HSM:sslserver | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          echo rsa > expected

          docker exec pki pki \
              --token HSM \
              -f $SHARED/password.conf \
              nss-key-find \
              --nickname HSM:sslserver | tee output
          sed -n 's/\s*Type:\s*\(\S\+\)\s*$/\L\1/p' output > actual
          diff actual expected

      - name: Remove HSM token
        run: docker exec pki softhsm2-util --delete-token --token HSM
