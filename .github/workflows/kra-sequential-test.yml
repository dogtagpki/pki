name: KRA with sequential serial numbers

on:
  workflow_call:
    inputs:
      db-image:
        required: false
        type: string

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Retrieve PKI images
        uses: actions/cache@v3
        with:
          key: pki-images-${{ github.sha }}
          path: pki-images.tar

      - name: Load PKI images
        run: docker load --input pki-images.tar

      - name: Create network
        run: docker network create example

      - name: Set up DS container
        run: |
          tests/bin/ds-container-create.sh ds
        env:
          IMAGE: ${{ inputs.db-image }}
          HOSTNAME: ds.example.com
          PASSWORD: Secret.123

      - name: Connect DS container to network
        run: docker network connect example ds --alias ds.example.com

      - name: Set up PKI container
        run: |
          tests/bin/runner-init.sh pki
        env:
          HOSTNAME: pki.example.com

      - name: Connect PKI container to network
        run: docker network connect example pki --alias pki.example.com

      - name: Install CA
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/ca.cfg \
              -s CA \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_cert_id_generator=legacy \
              -D pki_request_id_generator=legacy \
              -v

          docker exec pki pki-server cert-find

      - name: Install KRA
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/kra.cfg \
              -s KRA \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_key_id_generator=legacy \
              -D pki_request_id_generator=legacy \
              -v

          docker exec pki pki-server cert-find

      - name: Run PKI healthcheck
        run: docker exec pki pki-healthcheck --failures-only

      - name: Verify KRA admin
        run: |
          docker exec pki pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec pki pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec pki pki pkcs12-import \
              --pkcs12 /root/.dogtag/pki-tomcat/ca_admin_cert.p12 \
              --pkcs12-password Secret.123
          docker exec pki pki -n caadmin kra-user-show kraadmin

      - name: Verify KRA connector in CA
        run: |
          docker exec pki pki -n caadmin ca-kraconnector-show | tee output
          sed -n 's/\s*Host:\s\+\(\S\+\):.*/\1/p' output > actual
          echo pki.example.com > expected
          diff expected actual

      - name: Switch to RSNv3
        run: |
          docker exec pki pki-server stop --wait

          # switch cert request ID generator to RSNv3
          docker exec pki pki-server ca-config-unset dbs.beginRequestNumber
          docker exec pki pki-server ca-config-unset dbs.endRequestNumber
          docker exec pki pki-server ca-config-unset dbs.requestIncrement
          docker exec pki pki-server ca-config-unset dbs.requestLowWaterMark
          docker exec pki pki-server ca-config-unset dbs.requestCloneTransferNumber
          docker exec pki pki-server ca-config-unset dbs.requestRangeDN

          docker exec pki pki-server ca-config-set dbs.request.id.generator random
          docker exec pki pki-server ca-config-set dbs.request.id.length 128

          # switch cert ID generator to RSNv3
          docker exec pki pki-server ca-config-unset dbs.beginSerialNumber
          docker exec pki pki-server ca-config-unset dbs.endSerialNumber
          docker exec pki pki-server ca-config-unset dbs.serialIncrement
          docker exec pki pki-server ca-config-unset dbs.serialLowWaterMark
          docker exec pki pki-server ca-config-unset dbs.serialCloneTransferNumber
          docker exec pki pki-server ca-config-unset dbs.serialRangeDN

          docker exec pki pki-server ca-config-set dbs.cert.id.generator random
          docker exec pki pki-server ca-config-set dbs.cert.id.length 128

          # switch key request ID generator to RSNv3
          docker exec pki pki-server kra-config-unset dbs.beginRequestNumber
          docker exec pki pki-server kra-config-unset dbs.endRequestNumber
          docker exec pki pki-server kra-config-unset dbs.requestIncrement
          docker exec pki pki-server kra-config-unset dbs.requestLowWaterMark
          docker exec pki pki-server kra-config-unset dbs.requestCloneTransferNumber
          docker exec pki pki-server kra-config-unset dbs.requestRangeDN

          docker exec pki pki-server kra-config-set dbs.request.id.generator random
          docker exec pki pki-server kra-config-set dbs.request.id.length 128

          # switch key ID generator to RSNv3
          docker exec pki pki-server kra-config-unset dbs.beginSerialNumber
          docker exec pki pki-server kra-config-unset dbs.endSerialNumber
          docker exec pki pki-server kra-config-unset dbs.serialIncrement
          docker exec pki pki-server kra-config-unset dbs.serialLowWaterMark
          docker exec pki pki-server kra-config-unset dbs.serialCloneTransferNumber
          docker exec pki pki-server kra-config-unset dbs.serialRangeDN

          docker exec pki pki-server kra-config-set dbs.key.id.generator random
          docker exec pki pki-server kra-config-set dbs.key.id.length 128

          # restart PKI server
          docker exec pki pki-server start --wait

      - name: Verify cert key archival
        run: |
          docker exec pki /usr/share/pki/tests/kra/bin/test-cert-key-archival.sh

      - name: Check cert requests in CA
        run: |
          docker exec pki pki -n caadmin ca-cert-request-find

      - name: Check certs in CA
        run: |
          docker exec pki pki ca-cert-find

      - name: Check key requests in KRA
        run: |
          docker exec pki pki -n caadmin kra-key-request-find

      - name: Check keys in KRA
        run: |
          docker exec pki pki -n caadmin kra-key-find

      - name: Gather artifacts
        if: always()
        run: |
          tests/bin/ds-artifacts-save.sh --output=/tmp/artifacts/pki ds
          tests/bin/pki-artifacts-save.sh pki
        continue-on-error: true

      - name: Remove KRA
        run: docker exec pki pkidestroy -i pki-tomcat -s KRA -v

      - name: Remove CA
        run: docker exec pki pkidestroy -i pki-tomcat -s CA -v

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: kra-sequential
          path: |
            /tmp/artifacts/pki
