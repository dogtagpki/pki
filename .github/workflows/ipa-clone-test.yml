name: IPA clone

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      db-image:
        required: false
        type: string

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Retrieve ipa-runner image
        uses: actions/cache@v3
        with:
          key: ipa-runner-${{ inputs.os }}-${{ github.sha }}
          path: ipa-runner.tar

      - name: Load ipa-runner image
        run: docker load --input ipa-runner.tar

      - name: Create network
        run: docker network create example

      - name: Run primary container
        run: |
          tests/bin/runner-init.sh primary
        env:
          IMAGE: ipa-runner
          HOSTNAME: primary.example.com

      - name: Connect primary container to network
        run: docker network connect example primary --alias primary.example.com

      - name: Install IPA server in primary container
        run: |
          docker exec primary sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec primary ipa-server-install \
              -U \
              --domain example.com \
              -r EXAMPLE.COM \
              -p Secret.123 \
              -a Secret.123 \
              --no-host-dns \
              --no-ntp
          docker exec primary bash -c "echo Secret.123 | kinit admin"
          docker exec primary klist

      - name: Install KRA in primary container
        run: |
          docker exec primary ipa-kra-install -p Secret.123
          docker exec primary pki-server ca-config-find | grep ca.connector.KRA

      - name: Run secondary container
        run: |
          tests/bin/runner-init.sh secondary
        env:
          IMAGE: ipa-runner
          HOSTNAME: secondary.example.com

      - name: Connect secondary container to network
        run: docker network connect example secondary --alias secondary.example.com

      - name: Install IPA client in secondary container
        run: |
          docker exec secondary sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec secondary ipa-client-install \
              -U \
              --server=primary.example.com \
              --domain=example.com \
              --realm=EXAMPLE.COM \
              -p admin \
              -w Secret.123 \
              --no-ntp
          docker exec secondary bash -c "echo Secret.123 | kinit admin"
          docker exec secondary klist

      - name: Promote IPA client into IPA replica in secondary container
        run: |
          docker exec secondary ipa-replica-install \
              --no-host-dns \
              --setup-ca
          docker exec secondary pki-server ca-user-find

      - name: Install KRA in secondary container
        run: |
          docker exec secondary ipa-kra-install -p Secret.123
          docker exec secondary pki-server ca-config-find | grep ca.connector.KRA
          docker exec primary pki-server ca-config-find | grep ca.connector.KRA

      # TODO: Enable the following tests after the following issue is fixed:
      # https://pagure.io/freeipa/issue/9099
      #
      # - name: Run PKI healthcheck in primary container
      #   run: docker exec primary pki-healthcheck --failures-only
      #
      # - name: Run PKI healthcheck in secondary container
      #   run: docker exec secondary pki-healthcheck --failures-only

      - name: Verify CA admin
        run: |
          docker exec primary cp /root/ca-agent.p12 ${SHARED}/ca-agent.p12
          docker exec secondary pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec secondary pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec secondary pki pkcs12-import \
              --pkcs12 ${SHARED}/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec secondary pki -n ipa-ca-agent ca-user-show admin

      - name: Remove IPA server from secondary container
        run: docker exec secondary ipa-server-install --uninstall -U

      - name: Remove IPA server from primary container
        run: docker exec primary ipa-server-install --uninstall -U --ignore-last-of-role

      - name: Gather artifacts from primary container
        if: always()
        run: |
          tests/bin/ds-artifacts-save.sh primary --instance EXAMPLE-COM
          tests/bin/pki-artifacts-save.sh primary
          tests/bin/ipa-artifacts-save.sh primary
        continue-on-error: true

      - name: Gather artifacts from secondary container
        if: always()
        run: |
          tests/bin/ds-artifacts-save.sh secondary --instance EXAMPLE-COM
          tests/bin/pki-artifacts-save.sh secondary
          tests/bin/ipa-artifacts-save.sh secondary
        continue-on-error: true

      - name: Disconnect secondary container from network
        run: docker network disconnect example secondary

      - name: Disconnect primary container from network
        run: docker network disconnect example primary

      - name: Remove network
        run: docker network rm example

      - name: Upload artifacts from primary container
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ipa-clone-primary-${{ inputs.os }}
          path: |
            /tmp/artifacts/primary

      - name: Upload artifacts from secondary container
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ipa-clone-secondary-${{ inputs.os }}
          path: |
            /tmp/artifacts/secondary
