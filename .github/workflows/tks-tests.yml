name: TKS Tests

on: [push, pull_request]

jobs:
  init:
    name: Initialization
    uses: ./.github/workflows/init.yml
    secrets: inherit

  # docs/development/Building_PKI.md
  build:
    name: Building PKI
    needs: init
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        id: cache-buildx
        uses: actions/cache@v3
        with:
          key: buildx-${{ matrix.os }}-${{ hashFiles('pki.spec') }}
          path: /tmp/.buildx-cache

      - name: Build pki-deps image
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            OS_VERSION=${{ matrix.os }}
            COPR_REPO=${{ needs.init.outputs.repo }}
          tags: pki-deps
          target: pki-deps
          cache-to: type=local,dest=/tmp/.buildx-cache
        if: steps.cache-buildx.outputs.cache-hit != 'true'

      - name: Build pki-builder-deps image
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            OS_VERSION=${{ matrix.os }}
            COPR_REPO=${{ needs.init.outputs.repo }}
          tags: pki-builder-deps
          target: pki-builder-deps
          cache-to: type=local,dest=/tmp/.buildx-cache
        if: steps.cache-buildx.outputs.cache-hit != 'true'

      - name: Build runner image
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            OS_VERSION=${{ matrix.os }}
            COPR_REPO=${{ needs.init.outputs.repo }}
          tags: pki-runner
          target: pki-runner
          cache-from: type=local,src=/tmp/.buildx-cache
          outputs: type=docker,dest=pki-runner.tar

      - name: Store runner image
        uses: actions/cache@v3
        with:
          key: pki-tks-runner-${{ matrix.os }}-${{ github.run_id }}
          path: pki-runner.tar

  tks-basic-test:
    name: Basic TKS
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/tks-basic-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  tks-separate-test:
    name: TKS on separate instance
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/tks-separate-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  tks-external-certs-test:
    name: TKS with external certs
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/tks-external-certs-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  tks-clone-test:
    name: TKS clone
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/tks-clone-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  tks-hsm-test:
    name: TKS with HSM
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/tks-hsm-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}
