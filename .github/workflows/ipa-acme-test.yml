name: IPA ACME

on: workflow_call

env:
  DS_IMAGE: ${{ vars.DS_IMAGE || 'quay.io/389ds/dirsrv' }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Retrieve IPA images
        uses: actions/cache@v4
        with:
          key: ipa-images-${{ github.sha }}
          path: ipa-images.tar

      - name: Load IPA images
        run: docker load --input ipa-images.tar

      - name: Create network
        run: docker network create example

      - name: Run IPA container
        run: |
          tests/bin/runner-init.sh \
              --image=ipa-runner \
              --hostname=ipa.example.com \
              --network=example \
              --network-alias=ipa.example.com \
              --network-alias=ipa-ca.example.com \
              ipa

      - name: Install IPA server in IPA container
        run: |
          docker exec ipa sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec ipa ipa-server-install \
              -U \
              --domain example.com \
              -r EXAMPLE.COM \
              -p Secret.123 \
              -a Secret.123 \
              --no-host-dns \
              --no-ntp

      - name: Update PKI server configuration
        run: |
          docker exec ipa dnf install -y xmlstarlet

          # disable access log buffer
          docker exec ipa xmlstarlet edit --inplace \
              -u "//Valve[@className='org.apache.catalina.valves.AccessLogValve']/@buffered" \
              -v "false" \
              -i "//Valve[@className='org.apache.catalina.valves.AccessLogValve' and not(@buffered)]" \
              -t attr \
              -n "buffered" \
              -v "false" \
              /etc/pki/pki-tomcat/server.xml

          # restart PKI server
          docker exec ipa pki-server restart --wait

      - name: Check admin user
        run: |
          echo Secret.123 | docker exec -i ipa kinit admin
          docker exec ipa ipa ping

      - name: Install KRA in IPA container
        run: |
          docker exec ipa ipa-kra-install -p Secret.123
          docker exec ipa pki-server ca-connector-find

      - name: Verify CA admin in IPA container
        run: |
          docker exec ipa pki-server cert-export ca_signing --cert-file ca_signing.crt

          docker exec ipa pki nss-cert-import \
              --cert ca_signing.crt \
              --trust CT,C,C \
              ca_signing

          docker exec ipa pki pkcs12-import \
              --pkcs12 /root/ca-agent.p12 \
              --pkcs12-password Secret.123
          docker exec ipa pki -n ipa-ca-agent ca-user-show admin

      - name: Enable ACME in IPA container
        run: |
          docker exec ipa ipa-acme-manage enable
          docker exec ipa ipa-acme-manage status
          echo "Available" > expected
          docker exec ipa bash -c "pki acme-info | sed -n 's/\s*Status:\s\+\(\S\+\).*/\1/p' > ${SHARED}/actual"
          diff expected actual

      - name: Specify main CA as Authority ID for ACME in IPA container
        run: |
          caid=$(docker exec ipa ipa -e in_server=true ca-show ipa --raw | sed -n 's/\s*ipacaid:\s\+\(\S\+\).*/\1/p' )
          docker exec ipa pki-server acme-issuer-mod --type pki "-Dauthority-id=${caid}"
          echo "${caid}" > expected
          docker exec ipa bash -c "pki-server acme-issuer-show | sed -n 's/\s*Authority ID:\s\+\(\S\+\).*/\1/p' > ${SHARED}/actual"
          diff expected actual

      - name: Run client container
        run: |
          docker run \
              --detach \
              --name=client \
              --hostname=client.example.com \
              --privileged \
              --tmpfs /tmp \
              --tmpfs /run \
              ipa-runner \
              /usr/sbin/init

      - name: Connect client container to network
        run: docker network connect example client --alias client.example.com

      - name: Install IPA client in client container
        run: |
          docker exec client sysctl net.ipv6.conf.lo.disable_ipv6=0
          docker exec client ipa-client-install \
              -U \
              --server=ipa.example.com \
              --domain=example.com \
              --realm=EXAMPLE.COM \
              -p admin \
              -w Secret.123 \
              --no-ntp
          docker exec client bash -c "echo Secret.123 | kinit admin"
          docker exec client klist

      - name: Verify certbot in client container
        run: |
          docker exec client certbot register \
              --server https://ipa-ca.example.com/acme/directory \
              --email user1@example.com \
              --agree-tos \
              --non-interactive
          docker exec client certbot certonly \
              --server https://ipa-ca.example.com/acme/directory \
              -d client.example.com \
              --key-type rsa \
               --standalone \
              --non-interactive
          docker exec client certbot renew \
              --server https://ipa-ca.example.com/acme/directory \
              --cert-name client.example.com \
              --force-renewal \
              --non-interactive
          docker exec client certbot revoke \
              --server https://ipa-ca.example.com/acme/directory \
              --cert-name client.example.com \
              --non-interactive
          docker exec client certbot update_account \
              --server https://ipa-ca.example.com/acme/directory \
              --email user2@example.com \
              --non-interactive
          docker exec client certbot unregister \
              --server https://ipa-ca.example.com/acme/directory \
              --non-interactive

      - name: Disable ACME in IPA container
        run: |
          docker exec ipa ipa-acme-manage disable
          docker exec ipa ipa-acme-manage status
          echo "Unavailable" > expected
          docker exec ipa bash -c "pki acme-info | sed -n 's/\s*Status:\s\+\(\S\+\).*/\1/p' > ${SHARED}/actual"
          diff expected actual

      - name: Check IPA CA install log
        if: always()
        run: |
          docker exec ipa cat /var/log/ipaserver-install.log

      - name: Check HTTPD access logs
        if: always()
        run: |
          docker exec ipa cat /var/log/httpd/access_log

      - name: Check HTTPD error logs
        if: always()
        run: |
          docker exec ipa cat /var/log/httpd/error_log

      - name: Check DS server systemd journal
        if: always()
        run: |
          docker exec ipa journalctl -x --no-pager -u dirsrv@EXAMPLE-COM.service

      - name: Check DS access logs
        if: always()
        run: |
          docker exec ipa cat /var/log/dirsrv/slapd-EXAMPLE-COM/access

      - name: Check DS error logs
        if: always()
        run: |
          docker exec ipa cat /var/log/dirsrv/slapd-EXAMPLE-COM/errors

      - name: Check DS security logs
        if: always()
        run: |
          docker exec ipa cat /var/log/dirsrv/slapd-EXAMPLE-COM/security

      - name: Check CA pkispawn log
        if: always()
        run: |
          docker exec ipa find /var/log/pki -name "pki-ca-spawn.*" -exec cat {} \;

      - name: Check PKI server systemd journal
        if: always()
        run: |
          docker exec ipa journalctl -x --no-pager -u pki-tomcatd@pki-tomcat.service

      - name: Check PKI server access log
        if: always()
        run: |
          docker exec ipa find /var/log/pki/pki-tomcat -name "localhost_access_log.*" -exec cat {} \;

      - name: Check CA debug log
        if: always()
        run: |
          docker exec ipa find /var/lib/pki/pki-tomcat/logs/ca -name "debug.*" -exec cat {} \;

      - name: Remove IPA server from IPA container
        run: docker exec ipa ipa-server-install --uninstall -U

      - name: Check CA pkidestroy log
        if: always()
        run: |
          docker exec ipa find /var/log/pki -name "pki-ca-destroy.*" -exec cat {} \;
