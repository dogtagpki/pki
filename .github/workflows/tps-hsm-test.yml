name: TPS with HSM

on: workflow_call

env:
  DB_IMAGE: ${{ vars.DB_IMAGE || 'quay.io/389ds/dirsrv' }}

jobs:
  # docs/installation/tps/Installing_TPS_with_HSM.md
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Retrieve PKI images
        uses: actions/cache@v4
        with:
          key: pki-images-${{ github.sha }}
          path: pki-images.tar

      - name: Load PKI images
        run: docker load --input pki-images.tar

      - name: Create network
        run: docker network create example

      - name: Set up DS container
        run: |
          tests/bin/ds-container-create.sh ds
        env:
          IMAGE: ${{ env.DB_IMAGE }}
          HOSTNAME: ds.example.com
          PASSWORD: Secret.123

      - name: Connect DS container to network
        run: docker network connect example ds --alias ds.example.com

      - name: Set up PKI container
        run: |
          tests/bin/runner-init.sh pki
        env:
          HOSTNAME: pki.example.com

      - name: Connect PKI container to network
        run: docker network connect example pki --alias pki.example.com

      - name: Install dependencies
        run: |
          docker exec pki dnf install -y softhsm

      - name: Create SoftHSM token
        run: |
          # allow PKI user to access SoftHSM files
          docker exec pki usermod pkiuser -a -G ods

          # create SoftHSM token for PKI server
          docker exec pki runuser -u pkiuser -- \
              softhsm2-util \
              --init-token \
              --label HSM \
              --so-pin Secret.HSM \
              --pin Secret.HSM \
              --free

          docker exec pki ls -laR /var/lib/softhsm/tokens

      - name: Install CA with HSM
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/ca.cfg \
              -s CA \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_hsm_enable=True \
              -D pki_token_name=HSM \
              -D pki_token_password=Secret.HSM \
              -D pki_server_database_password=Secret.123 \
              -D pki_ca_signing_token=HSM \
              -D pki_ocsp_signing_token=HSM \
              -D pki_audit_signing_token=HSM \
              -D pki_subsystem_token=HSM \
              -D pki_sslserver_token=internal \
              -v

      - name: Check system certs in internal token
        run: |
          # CA should create 5 certs in internal token
          echo "5" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Check system certs in HSM
        run: |
          # CA should create 4 certs in HSM
          echo "4" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Install KRA with HSM
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/kra.cfg \
              -s KRA \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_hsm_enable=True \
              -D pki_token_name=HSM \
              -D pki_token_password=Secret.HSM \
              -D pki_server_database_password=Secret.123 \
              -D pki_storage_token=HSM \
              -D pki_transport_token=HSM \
              -D pki_audit_signing_token=HSM \
              -D pki_subsystem_token=HSM \
              -D pki_sslserver_token=internal \
              -v

      - name: Check system certs in internal token
        run: |
          # KRA should create 3 additional certs in internal token
          echo "8" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Check system certs in HSM
        run: |
          # KRA should create 3 additional certs in HSM
          echo "7" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Install TKS
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/tks.cfg \
              -s TKS \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_hsm_enable=True \
              -D pki_token_name=HSM \
              -D pki_token_password=Secret.HSM \
              -D pki_server_database_password=Secret.123 \
              -D pki_audit_signing_token=HSM \
              -D pki_subsystem_token=HSM \
              -D pki_sslserver_token=internal \
              -v

      - name: Check system certs in internal token
        run: |
          # TKS should create 1 additional cert in internal token
          echo "9" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Check system certs in HSM
        run: |
          # TKS should create 1 additional cert in HSM
          echo "8" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Install TPS
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/tps.cfg \
              -s TPS \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -D pki_hsm_enable=True \
              -D pki_token_name=HSM \
              -D pki_token_password=Secret.HSM \
              -D pki_server_database_password=Secret.123 \
              -D pki_audit_signing_token=HSM \
              -D pki_subsystem_token=HSM \
              -D pki_sslserver_token=internal \
              -D pki_authdb_hostname=ds.example.com \
              -D pki_authdb_port=3389 \
              -D pki_enable_server_side_keygen=True \
              -v

      - name: Check system certs in internal token
        run: |
          # TPS should create 1 additional cert in internal token
          echo "10" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Check tps_audit_signing cert in internal token
        run: |
          echo ",,P" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              nss-cert-show \
              tps_audit_signing | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff expected actual

      - name: Check system certs in HSM
        run: |
          # TPS should create 1 additional cert in HSM
          echo "9" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-find | tee output
          grep "Serial Number:" output | wc -l > actual
          diff expected actual

      - name: Check tps_audit_signing cert in HSM
        run: |
          echo "u,u,Pu" > expected
          docker exec pki pki \
              -d /var/lib/pki/pki-tomcat/conf/alias \
              -f /var/lib/pki/pki-tomcat/conf/password.conf \
              --token HSM \
              nss-cert-show \
              HSM:tps_audit_signing | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff expected actual

      - name: Run PKI healthcheck
        run: docker exec pki pki-healthcheck --failures-only

      - name: Check TPS admin
        run: |
          docker exec pki pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec pki pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec pki pki pkcs12-import \
              --pkcs12 /root/.dogtag/pki-tomcat/ca_admin_cert.p12 \
              --pkcs12-password Secret.123
          docker exec pki pki -n caadmin tps-user-show tpsadmin

      - name: Gather artifacts
        if: always()
        run: |
          tests/bin/ds-artifacts-save.sh --output=/tmp/artifacts/pki ds
          tests/bin/pki-artifacts-save.sh pki
        continue-on-error: true

      - name: Remove TPS
        run: docker exec pki pkidestroy -i pki-tomcat -s TPS -v

      - name: Remove TKS
        run: docker exec pki pkidestroy -i pki-tomcat -s TKS -v

      - name: Remove KRA
        run: docker exec pki pkidestroy -i pki-tomcat -s KRA -v

      - name: Remove CA
        run: docker exec pki pkidestroy -i pki-tomcat -s CA -v

      - name: Remove SoftHSM token
        run: |
          docker exec pki ls -laR /var/lib/softhsm/tokens
          docker exec pki runuser -u pkiuser -- softhsm2-util --delete-token --token HSM

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tps-hsm-test
          path: |
            /tmp/artifacts/pki
