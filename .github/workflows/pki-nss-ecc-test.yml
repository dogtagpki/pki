name: PKI NSS CLI with ECC

on: workflow_call

env:
  DS_IMAGE: ${{ vars.DS_IMAGE || 'quay.io/389ds/dirsrv' }}

jobs:
  # https://github.com/dogtagpki/pki/wiki/PKI-NSS-CLI
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Retrieve PKI images
        uses: actions/cache@v4
        with:
          key: pki-images-${{ github.sha }}
          path: pki-images.tar

      - name: Load PKI images
        run: docker load --input pki-images.tar

      - name: Set up runner container
        run: |
          tests/bin/runner-init.sh pki
        env:
          HOSTNAME: pki.example.com

      - name: Create EC key
        run: |
          docker exec pki pki nss-key-create \
              --key-type EC \
              --key-id-file $SHARED/ca_signing.key-id

          docker exec pki pki nss-key-show \
              --key-id-file $SHARED/ca_signing.key-id

      - name: Verify key type
        run: |
          echo ec > expected

          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output
          sed -n 's/^<.*>\s\+\(\S\+\)\s\+\S\+\s\+.*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-key-find | tee output
          sed -n 's/\s*Type:\s*\(\S\+\)\s*$/\L\1/p' output > actual
          diff actual expected

      # https://github.com/dogtagpki/pki/wiki/Generating-CA-Signing-CSR-with-PKI-NSS
      - name: Create CA signing cert request with existing EC key
        run: |
          docker exec pki pki nss-cert-request \
              --key-id-file $SHARED/ca_signing.key-id \
              --subject "CN=Certificate Authority" \
              --ext /usr/share/pki/server/certs/ca_signing.conf \
              --csr ca_signing.csr
          docker exec pki openssl req -text -noout -in ca_signing.csr

      # https://github.com/dogtagpki/pki/wiki/Issuing-CA-Signing-Certificate-with-PKI-NSS
      - name: Issue self-signed CA signing cert
        run: |
          docker exec pki pki nss-cert-issue \
              --csr ca_signing.csr \
              --ext /usr/share/pki/server/certs/ca_signing.conf \
              --cert ca_signing.crt
          docker exec pki openssl x509 -text -noout -in ca_signing.crt

      - name: Import CA signing cert
        run: |
          docker exec pki pki nss-cert-import \
              --cert ca_signing.crt \
              --trust CT,C,C \
              ca_signing

      - name: Verify trust flags
        run: |
          echo "CTu,Cu,Cu" > expected

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output
          sed -n 's/^ca_signing\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-cert-show ca_signing | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-cert-show --cert-file ca_signing.crt

      # https://github.com/dogtagpki/pki/wiki/Generating-SSL-Server-CSR-with-PKI-NSS
      - name: Create SSL server cert request with new EC key
        run: |
          docker exec pki pki nss-cert-request \
              --key-type EC \
              --subject "CN=pki.example.com" \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              --csr sslserver.csr
          docker exec pki openssl req -text -noout -in sslserver.csr

      # https://github.com/dogtagpki/pki/wiki/Issuing-SSL-Server-Certificate-with-PKI-NSS
      - name: Issue SSL server cert
        run: |
          docker exec pki pki nss-cert-issue \
              --issuer ca_signing \
              --csr sslserver.csr \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              --cert sslserver.crt
          docker exec pki openssl x509 -text -noout -in sslserver.crt

      - name: Import SSL server cert
        run: |
          docker exec pki pki nss-cert-import \
              --cert sslserver.crt \
              sslserver

          # get key ID
          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output
          sed -n \
              's/^<.*>\s\+\S\+\s\+\(\S\+\)\s\+NSS Certificate DB:sslserver$/0x\1/p' \
              output \
              > sslserver.key-id

      - name: Verify trust flags
        run: |
          echo "u,u,u" > expected

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output
          sed -n 's/^sslserver\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-cert-show sslserver | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

      - name: Verify key type
        run: |
          echo ec > expected

          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output
          sed -n 's/^<.*>\s\+\(\S\+\)\s\+\S\+\s\+NSS Certificate DB:sslserver$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-key-find --nickname sslserver | tee output
          sed -n 's/\s*Type:\s*\(\S\+\)\s*$/\L\1/p' output > actual
          diff actual expected

      - name: Delete SSL server cert but keep the key
        run: |
          docker exec pki pki nss-cert-del sslserver

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output

          # SSL server cert should not exist
          echo "ca_signing CTu,Cu,Cu" > expected
          sed -n -e '1,4d' -e 's/^\(.*\S\)\s\+\(\S\+\)\s*$/\1 \2/p' output > actual
          diff expected actual

          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output

          # SSL server key should exist but orphaned
          echo "(orphan)" > expected
          echo "NSS Certificate DB:ca_signing" >> expected
          sed -n 's/^<.*>\s\+\S\+\s\+\S\+\s\+\(.*\)$/\1/p' output | sort > actual
          diff expected actual

      - name: Create new SSL server cert request with existing EC key
        run: |
          docker exec pki pki nss-cert-request \
              --key-id-file $SHARED/sslserver.key-id \
              --subject "CN=pki.example.com" \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              --csr new_sslserver.csr
          docker exec pki openssl req -text -noout -in new_sslserver.csr

      - name: Issue new SSL server cert
        run: |
          docker exec pki pki nss-cert-issue \
              --issuer ca_signing \
              --csr new_sslserver.csr \
              --ext /usr/share/pki/server/certs/sslserver.conf \
              --cert new_sslserver.crt
          docker exec pki openssl x509 -text -noout -in new_sslserver.crt

      - name: Import new SSL server cert
        run: |
          docker exec pki pki nss-cert-import \
              --cert new_sslserver.crt \
              new_sslserver

      - name: Verify trust flags
        run: |
          echo "u,u,u" > expected

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output
          sed -n 's/^new_sslserver\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-cert-show new_sslserver | tee output
          sed -n 's/\s*Trust Flags:\s*\(\S\+\)\s*$/\1/p' output > actual
          diff actual expected

      - name: Verify key type
        run: |
          echo ec > expected

          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output
          sed -n 's/^<.*>\s\+\(\S\+\)\s\+\S\+\s\+NSS Certificate DB:new_sslserver$/\1/p' output > actual
          diff actual expected

          docker exec pki pki nss-key-find --nickname new_sslserver | tee output
          sed -n 's/\s*Type:\s*\(\S\+\)\s*$/\L\1/p' output > actual
          diff actual expected

      - name: Verify key ID
        run: |
          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output
          sed -n \
              's/^<.*>\s\+\S\+\s\+\(\S\+\)\s\+NSS Certificate DB:new_sslserver$/0x\1/p' \
              output \
              > new_sslserver.key-id

          diff sslserver.key-id new_sslserver.key-id

      - name: Delete SSL server cert and key
        run: |
          docker exec pki pki nss-cert-del new_sslserver --remove-key

          docker exec pki certutil -L -d /root/.dogtag/nssdb | tee output

          # SSL server cert should not exist
          echo "ca_signing CTu,Cu,Cu" > expected
          sed -n -e '1,4d' -e 's/^\(.*\S\)\s\+\(\S\+\)\s*$/\1 \2/p' output > actual
          diff expected actual

          docker exec pki certutil -K -d /root/.dogtag/nssdb | tee output

          # SSL server key should not exist
          echo "NSS Certificate DB:ca_signing" > expected
          sed -n 's/^<.*>\s\+\S\+\s\+\S\+\s\+\(.*\)$/\1/p' output | sort > actual
          diff expected actual
