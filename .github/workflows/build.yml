name: Build PKI
on:
  workflow_call:
    inputs:
      key_container:
        required: true
        type: string
    secrets:
      BASE64_MATRIX:
        required: false
      BASE64_REPO:
        required: false
      BASE64_DATABASE:
        required: false
    outputs:
      matrix:
        value: ${{ jobs.init.outputs.matrix}}
      repo:
        value: ${{ jobs.init.outputs.repo}}
      db-image:
        value: ${{ jobs.init.outputs.db-image}}

jobs:
  init:
    name: Initializing workflow
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.init.outputs.matrix }}
      repo: ${{ steps.init.outputs.repo }}
      db-image: ${{ steps.init.outputs.db-image }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Initialize workflow
        id: init
        env:
          BASE64_MATRIX: ${{ secrets.BASE64_MATRIX }}
          BASE64_REPO: ${{ secrets.BASE64_REPO }}
          BASE64_DATABASE: ${{ secrets.BASE64_DATABASE }}
        run: |
          tests/bin/init-workflow.sh

  # docs/development/Building_PKI.md
  build:
    name: Building PKI
    needs: init
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    container: registry.fedoraproject.org/fedora:${{ matrix.os }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: /var/cache/dnf
          key: fedora:${{ matrix.os }}-ca-${{ hashFiles('pki.spec') }}

      - name: Install dependencies
        run: |
          # keep packages after installation
          echo "keepcache=True" >> /etc/dnf/dnf.conf
          dnf install -y dnf-plugins-core rpm-build moby-engine
          dnf copr enable -y ${{ needs.init.outputs.repo }}
          dnf builddep -y --allowerasing --spec ./pki.spec --nogpgcheck
          # don't cache COPR packages
          rm -f `find /var/cache/dnf -name '*.rpm' | grep '/var/cache/dnf/copr:'`

      - name: Build PKI packages
        run: ./build.sh --with-timestamp --work-dir=build rpm

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build runner image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            OS_VERSION=${{ matrix.os }}
            COPR_REPO=${{ needs.init.outputs.repo }}
          tags: pki-runner
          target: pki-runner
          outputs: type=docker,dest=pki-${{ inputs.key_container}}-runner.tar

      - name: Store runner image
        uses: actions/cache@v3
        with:
          key: pki-${{ inputs.key_container }}-runner-${{ matrix.os }}-${{ github.run_id }}
          path: pki-${{ inputs.key_container }}-runner.tar
