name: KRA Tests

on: [push, pull_request]

jobs:
  init:
    name: Initialization
    uses: ./.github/workflows/init.yml
    secrets: inherit

  build:
    name: Waiting for build
    needs: init
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    steps:
      - name: Wait for build
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.ref }}
          check-name: 'Building PKI (${{ matrix.os }})'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
        if: github.event_name == 'push'

      - name: Wait for build
        uses: lewagon/wait-on-check-action@v1.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          check-name: 'Building PKI (${{ matrix.os }})'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 30
        if: github.event_name == 'pull_request'

  kra-basic-test:
    name: Basic KRA
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-basic-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-separate-test:
    name: KRA on separate instance
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-separate-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-external-certs-test:
    name: KRA with external certs
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-external-certs-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-cmc-test:
    name: KRA with CMC
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-cmc-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-clone-test:
    name: KRA clone
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-clone-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-standalone-test:
    name: Standalone KRA
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-standalone-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-rsnv3-test:
    name: KRA with RSNv3
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-rsnv3-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}

  kra-hsm-test:
    name: KRA with HSM
    needs: [init, build]
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    uses: ./.github/workflows/kra-hsm-test.yml
    with:
      os: ${{ matrix.os }}
      db-image: ${{ needs.init.outputs.db-image }}
