name: CA connection with DS

on: workflow_call

env:
  DB_IMAGE: ${{ vars.DB_IMAGE || 'quay.io/389ds/dirsrv' }}

jobs:
  # docs/installation/ca/Installing_CA.md
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      SHARED: /tmp/workdir/pki
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Retrieve PKI images
        uses: actions/cache@v4
        with:
          key: pki-images-${{ github.sha }}
          path: pki-images.tar

      - name: Load PKI images
        run: docker load --input pki-images.tar

      - name: Create network
        run: docker network create example

      - name: Set up DS container
        run: |
          tests/bin/ds-container-create.sh ds
        env:
          IMAGE: ${{ env.DB_IMAGE }}
          HOSTNAME: ds.example.com
          PASSWORD: Secret.123

      - name: Connect DS container to network
        run: docker network connect example ds --alias ds.example.com

      - name: Set up PKI container
        run: |
          tests/bin/runner-init.sh pki
        env:
          HOSTNAME: pki.example.com

      - name: Connect PKI container to network
        run: docker network connect example pki --alias pki.example.com

      - name: Install CA
        run: |
          docker exec pki pkispawn \
              -f /usr/share/pki/server/examples/installation/ca.cfg \
              -s CA \
              -D pki_ds_url=ldap://ds.example.com:3389 \
              -v
          docker exec pki pki-server ca-config-set internaldb.minConns 0
          docker exec pki pki-server restart --wait
          docker exec pki curl -s http://pki.example.com:8080/ca/admin/ca/getStatus

      - name: Check DS backends
        run: |
          cat > expected << EOF
          dc=ca,dc=pki,dc=example,dc=com (ca)
          dc=example,dc=com (userroot)
          EOF

          docker exec ds dsconf localhost backend suffix list | tee actual

          diff expected actual

      - name: Check DS user
        run: |
            cat > expected << EOF
            dn: uid=pkidbuser,ou=People,dc=ca,dc=pki,dc=example,dc=com
            nsPagedSizeLimit: 20000

            EOF

            docker exec ds ldapsearch \
                -H ldap://ds.example.com:3389 \
                -D "cn=Directory Manager" \
                -w Secret.123 \
                -o ldif_wrap=no \
                -LLL \
                -b "uid=pkidbuser,ou=People,dc=ca,dc=pki,dc=example,dc=com" \
                nsPagedSizeLimit \
                | tee actual

            diff expected actual

      - name: Initialize PKI client
        run: |
          docker exec pki pki-server cert-export ca_signing --cert-file ca_signing.crt
          docker exec pki pki client-cert-import ca_signing --ca-cert ca_signing.crt
          docker exec pki pki info

      - name: Create csr requesst
        run: |
          docker exec pki pki nss-cert-request --subject "CN=$HOSTNAME" --ext /usr/share/pki/server/certs/sslserver.conf  --csr sslserver.csr

      - name: Test request enrollment
        run: |
          # enrollment should work
          docker exec pki pki ca-cert-request-submit --profile caServerCert --csr-file sslserver.csr  | tee output
          grep "Reason:" output | wc -l > actual
          echo "0" > expected
          diff expected actual
          
      - name: Stop the DS
        run: |
          docker stop ds
          sleep 10

          # enrollment should fail
          docker exec pki pki ca-cert-request-submit --profile caServerCert --csr-file sslserver.csr  | tee output
          grep "Reason:" output | wc -l > actual
          echo "1" > expected
          diff expected actual

      - name: Restart the DS
        run: |
          docker start ds
          sleep 20

          # enrollment should work
          docker exec pki pki ca-cert-request-submit --profile caServerCert --csr-file sslserver.csr  | tee output
          grep "Reason:" output | wc -l > actual
          echo "0" > expected
          diff expected actual

      - name: Start without the DS
        run: |
          docker stop ds
          sleep 20
          docker exec pki pki-server ca-config-set ca.authorityMonitor.enable false 
          docker exec pki pki-server restart --wait
          docker exec pki curl -s http://pki.example.com:8080/ca/admin/ca/getStatus

          # enrollment should fail
          docker exec pki pki ca-cert-request-submit --profile caServerCert --csr-file sslserver.csr | tee output
          grep "Reason:" output | wc -l > actual
          echo "1" > expected
          diff expected actual
  
      - name: Start the DS with running CA
        run: |
          docker start ds
          sleep 60

          # enrollment should work
          docker exec pki pki ca-cert-request-submit --profile caServerCert --csr-file sslserver.csr | tee output
          grep "Reason:" output | wc -l > actual
          echo "0" > expected
          diff expected actual

      - name: Remove CA
        run: docker exec pki pkidestroy -i pki-tomcat -s CA -v

      - name: Check DS server systemd journal
        if: always()
        run: |
          docker exec ds journalctl -x --no-pager -u dirsrv@localhost.service

      - name: Check DS container logs
        if: always()
        run: |
          docker logs ds

      - name: Check PKI server systemd journal
        if: always()
        run: |
          docker exec pki journalctl -x --no-pager -u pki-tomcatd@pki-tomcat.service

      - name: Check CA debug log
        if: always()
        run: |
          docker exec pki find /var/lib/pki/pki-tomcat/logs/ca -name "debug.*" -exec cat {} \;

      - name: Gather artifacts
        if: always()
        run: |
          tests/bin/ds-artifacts-save.sh ds
          tests/bin/pki-artifacts-save.sh pki
        continue-on-error: true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ca-ds-connection
          path: /tmp/artifacts
