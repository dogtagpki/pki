{
  "comments": [
    {
      "key": {
        "uuid": "47cf1feb_3f524b06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "The patch description should be updated to match the actual commands.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5109d22_7cc42176",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 433,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s remove this since the event name is case sensitive. We don\u0027t want to encourage people to use inconsistent cases in their scripts.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "633e929d_5169aee8",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 433,
      "author": {
        "id": 1012851
      },
      "writtenOn": "2018-04-10T15:21:25Z",
      "side": 1,
      "message": "I completely agree with not using the inconsistent name, But as the testing corner case, I implemented this.\n\nI\u0027m going to write the test cases for that so I thought it was a good idea to implement it in a such a way that it will cover the corner case.\n\nWaiting for your reply.",
      "parentUuid": "d5109d22_7cc42176",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4463c502_953a3b46",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 433,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-10T16:15:07Z",
      "side": 1,
      "message": "If this line is included, the CLI will accept an unsupported event name (e.g. AuThZ), and then enable a different event (i.e. AUTHZ). We don\u0027t want to encourage people to use the CLI with incorrect event names and expect it to work.\n\nI think the proper solution is to define a full list of supported events somewhere, then the event_name should be compared against that list. If the event_name doesn\u0027t match exactly, it should be rejected.\n\nHowever, since we don\u0027t have that list yet, we can\u0027t do that validation. So any invalid event name will still be accepted by the CLI, but at least it will not cause an unintended consequence (i.e. AUTHZ got enabled).\n\nSince there\u0027s no validation yet, the test case should not attempt to test negative cases. Or if a negative test is added, it should fail if tested against the current code. Don\u0027t add a test case that accepts unsupported event names. In any case, feel free to open a ticket to add the missing event list.",
      "parentUuid": "633e929d_5169aee8",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88f31adf_529138d1",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 443,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s move line 438-443 into AuditEventEnableCLI so the enable_audit_event() will be simpler and more reusable.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63055895_a68aec7c",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 445,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "If the event already exists in log.instance.SignedAudit.events, that means the event is already enabled. Usually we just ignore it if the system is already in the state that we want.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f99f6ff0_e742c230",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 445,
      "author": {
        "id": 1012851
      },
      "writtenOn": "2018-04-10T15:21:25Z",
      "side": 1,
      "message": "\u003e If the event already exists in log.instance.SignedAudit.events,\n \u003e that means the event is already enabled. Usually we just ignore it\n \u003e if the system is already in the state that we want.\n\nOk.",
      "parentUuid": "63055895_a68aec7c",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04dd9b6c_14311d43",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 454,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s remove this too since the attribute names in the filter is case sensitive too.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40d4ff18_3d3409ef",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 461,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s remove line 456-461 since the filter can be updated regardless whether the event is enabled or not.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91e9afd4_9052ce5a",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 461,
      "author": {
        "id": 1012851
      },
      "writtenOn": "2018-04-10T15:21:25Z",
      "side": 1,
      "message": "\u003e Let\u0027s remove line 456-461 since the filter can be updated\n \u003e regardless whether the event is enabled or not.\n\nok. If the event is not enabled, then it should expect to print warning message? or some return code?",
      "parentUuid": "40d4ff18_3d3409ef",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3ba17b0_0c6f1ef5",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 461,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-10T16:15:07Z",
      "side": 1,
      "message": "I don\u0027t think we need to generate any warnings. I suppose some people might want to configure the filters first, then enable the event at a later time. In that case they already know that the event is disabled.",
      "parentUuid": "91e9afd4_9052ce5a",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94f15fc8_7f1791cf",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 469,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s move 464-469 into AuditEventModCLI.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd63ffc2_db866f87",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 471,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "We can remove 470-471.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16e38a71_fc79d359",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 477,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Remove this one too.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f97a2c17_99119f0e",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "If the event doesn\u0027t exist in log.instance.SignedAudit.events, that means the event is already disabled. We can ignore simply it.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dd27a98_f4774a5f",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1012851
      },
      "writtenOn": "2018-04-10T15:21:25Z",
      "side": 1,
      "message": "\u003e If the event doesn\u0027t exist in log.instance.SignedAudit.events, that\n \u003e means the event is already disabled. We can ignore simply it.\n\nAgreed. Again I implemented it as a testing corner case. If the filter is not there then at least it should print the message.",
      "parentUuid": "f97a2c17_99119f0e",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05c11067_88151dc0",
        "filename": "base/server/python/pki/server/__init__.py",
        "patchSetId": 4
      },
      "lineNbr": 492,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s move 487-492 to AuditEventDeleteCLI.",
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e96d5a78_5b927820",
        "filename": "base/server/python/pki/server/cli/audit.py",
        "patchSetId": 4
      },
      "lineNbr": 203,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2018-04-02T23:02:52Z",
      "side": 1,
      "message": "Let\u0027s use the full word \"Modify\" in the command description.",
      "range": {
        "startLine": 203,
        "startChar": 29,
        "endLine": 203,
        "endChar": 32
      },
      "revId": "d515d6ceb6b1ce42bd45ae4f74e97ed63b9444cd",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}