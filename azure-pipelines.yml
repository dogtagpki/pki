# Provide docker in container for installing dependencies as root.
# https://github.com/Microsoft/azure-pipelines-agent/issues/2043#issuecomment-687983301
resources:
  containers:
  - container: fedora_latest
    image: fedora:latest
    options: '--name runner -v /usr/bin/docker:/usr/bin/docker:ro'

jobs:
- job: BuildTest
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      fedora_latest:
        image: fedora_latest
  container: $[variables['image']]
  steps:
  - script: |
      docker exec -u 0 -w $BUILD_SOURCESDIRECTORY runner dnf install -y dnf-plugins-core rpm-build maven
      docker exec -u 0 -w $BUILD_SOURCESDIRECTORY runner dnf copr enable -y @pki/master
      docker exec -u 0 -w $BUILD_SOURCESDIRECTORY runner dnf builddep -y --spec pki.spec
    displayName: Install PKI dependencies

  - script: |
      ./build.sh \
          --work-dir=build \
          --python-dir=/usr/lib/python3.10/site-packages \
          dist
    displayName: Build PKI with CMake

  - script: |
      mvn install:install-file \
          -Dfile=/usr/lib/java/jss.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=jss \
          -Dversion=5.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true

      mvn install:install-file \
          -Dfile=/usr/lib/java/jss-symkey.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=jss-symkey \
          -Dversion=5.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true
    displayName: Install JSS into Maven repo

  - script: |
      mvn install:install-file \
          -Dfile=/usr/share/java/tomcatjss.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=tomcatjss \
          -Dversion=8.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true
    displayName: Install Tomcat JSS into Maven repo

  - script: |
      mvn install:install-file \
          -Dfile=/usr/share/java/ldapjdk.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=ldapjdk \
          -Dversion=5.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true
    displayName: Install LDAP JDK into Maven repo

  - script: |
      mvn package -DskipTests
    displayName: Build PKI with Maven

  - script: |
      jar tvf build/dist/pki-cmsutil.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/util/target/pki-util-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-util.jar

  - script: |
      jar tvf build/dist/pki-tools.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/tools/target/pki-tools-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-tools.jar

  - script: |
      jar tvf build/dist/pki-ca.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/ca/target/pki-ca-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-ca.jar

  - script: |
      jar tvf build/dist/pki-kra.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/kra/target/pki-kra-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-kra.jar

  - script: |
      jar tvf build/dist/pki-ocsp.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/ocsp/target/pki-ocsp-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-ocsp.jar

  - script: |
      jar tvf build/dist/pki-tks.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/tks/target/pki-tks-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-tks.jar

  - script: |
      jar tvf build/dist/pki-tps.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/tps/target/pki-tps-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-tps.jar

  - script: |
      jar tvf build/dist/pki-acme.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      jar tvf base/acme/target/pki-acme-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-acme.jar

  - script: |
      docker exec -u 0 -w $BUILD_SOURCESDIRECTORY runner ./build.sh \
          --work-dir=build \
          install
    displayName: Install PKI

  - script: |
      # generate CSR
      pki nss-cert-request \
          --key-type RSA \
          --subject "CN=Certificate Authority" \
          --ext /usr/share/pki/server/certs/ca_signing.conf \
          --csr ca_signing.csr

      # issue self-signed cert
      pki nss-cert-issue \
          --csr ca_signing.csr \
          --ext /usr/share/pki/server/certs/ca_signing.conf \
          --cert ca_signing.crt

      # import cert
      pki nss-cert-import \
          --cert ca_signing.crt \
          --trust CT,C,C \
          ca_signing

      # display cert
      pki nss-cert-show ca_signing
    displayName: Test PKI CLI
