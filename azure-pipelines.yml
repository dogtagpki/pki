jobs:
- job: BuildTest
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      docker build \
          --target fedora-runner \
          --tag fedora-runner:latest \
          .

      docker run \
          --name=runner \
          -v $BUILD_SOURCESDIRECTORY:/root/src \
          --privileged \
          --detach \
          fedora-runner:latest

      while :
      do
          docker exec runner echo "Runner is ready" && break

          echo "Waiting for runner..."
          sleep 1
          [ $((++i)) -ge 10 ] && exit 1
      done
    displayName: Create runner container

  - script: |
      docker exec runner dnf install -y dnf-plugins-core rpm-build maven
      docker exec runner dnf copr enable -y @pki/master
      docker exec runner dnf builddep -y --spec /root/src/pki.spec
    displayName: Install PKI dependencies

  - script: |
      docker exec runner \
          /root/src/build.sh -v rpm
    displayName: Build PKI RPM packages

  - script: |
      # find RPM packages (excluding debug packages)
      docker exec runner \
          ls /root/build/pki/RPMS | grep -v debuginfo | grep -v debugsource | tee output
      RPMS=$(cat output)

      # get list of files in each RPM package
      for rpm in $RPMS
      do
          docker exec runner \
              rpm -qlp "/root/build/pki/RPMS/$rpm" | tee -a files
      done

      # exclude RPM-specific files
      sed -i \
          -e '/^\/usr\/share\/licenses\//d' \
          -e '/^\/usr\/share\/man\//d' \
          -e '/^\/usr\/share\/doc\//d' \
          -e '/^\/usr\/lib\/.build-id\//d' \
          -e '/__pycache__/d' \
          files
    displayName: Get list of files from RPM packages

  - script: |
      # get Python <major>.<minor> version
      docker exec runner python3 --version | tee output
      VERSION=$(sed 's/Python \([0-9]\+\.[0-9]\+\)\..*/\1/' output)

      docker exec runner \
          /root/src/build.sh \
          --work-dir=/root/build \
          --python-dir=/usr/lib/python$VERSION/site-packages \
          dist
    displayName: Build PKI with CMake

  - script: |
      docker exec runner \
          mvn install:install-file \
          -f /root/src \
          -Dfile=/usr/lib/java/jss.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=jss \
          -Dversion=5.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true

      docker exec runner \
          mvn install:install-file \
          -f /root/src \
          -Dfile=/usr/lib/java/jss-symkey.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=jss-symkey \
          -Dversion=5.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true
    displayName: Install JSS into Maven repo

  - script: |
      docker exec runner \
          mvn install:install-file \
          -f /root/src \
          -Dfile=/usr/share/java/tomcatjss.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=tomcatjss \
          -Dversion=8.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true
    displayName: Install Tomcat JSS into Maven repo

  - script: |
      docker exec runner \
          mvn install:install-file \
          -f /root/src \
          -Dfile=/usr/share/java/ldapjdk.jar \
          -DgroupId=org.dogtagpki \
          -DartifactId=ldapjdk \
          -Dversion=5.3.0-SNAPSHOT \
          -Dpackaging=jar \
          -DgeneratePom=true
    displayName: Install LDAP JDK into Maven repo

  - script: |
      docker exec runner \
          mvn package \
          -f /root/src \
          -DskipTests
    displayName: Build PKI with Maven

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-certsrv.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/common/target/pki-common-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-certsrv.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-tools.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/tools/target/pki-tools-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-tools.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-ca.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/ca/target/pki-ca-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-ca.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-kra.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/kra/target/pki-kra-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-kra.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-ocsp.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/ocsp/target/pki-ocsp-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-ocsp.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-tks.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/tks/target/pki-tks-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-tks.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-tps.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/tps/target/pki-tps-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-tps.jar

  - script: |
      docker exec runner \
          jar tvf /root/build/dist/pki-acme.jar | awk '{print $8;}' | grep -v '/$' | sort | tee cmake.out
      docker exec runner \
          jar tvf /root/src/base/acme/target/pki-acme-11.3.0-SNAPSHOT.jar | awk '{print $8;}' | grep -v -E '^META-INF/maven/|/$' | sort > maven.out
      diff cmake.out maven.out
    displayName: Compare pki-acme.jar

  - script: |
      docker exec runner \
          /root/src/build.sh \
          --work-dir=/root/build \
          install
    displayName: Install PKI with CMake

  - script: |
      readarray -t files < files
      docker exec runner ls -ld "${files[@]}"
    displayName: Compare CMake and RPM files

  - script: |
      # generate CSR
      docker exec runner \
          pki nss-cert-request \
          --key-type RSA \
          --subject "CN=Certificate Authority" \
          --ext /usr/share/pki/server/certs/ca_signing.conf \
          --csr ca_signing.csr

      # issue self-signed cert
      docker exec runner \
          pki nss-cert-issue \
          --csr ca_signing.csr \
          --ext /usr/share/pki/server/certs/ca_signing.conf \
          --cert ca_signing.crt

      # import cert
      docker exec runner \
          pki nss-cert-import \
          --cert ca_signing.crt \
          --trust CT,C,C \
          ca_signing

      # display cert
      docker exec runner \
          pki nss-cert-show ca_signing
    displayName: Test PKI CLI

  - script: |
      docker exec runner pki-server create tomcat@pki
      docker exec runner pki-server start tomcat@pki --wait
      docker exec runner pki-server status tomcat@pki
      docker exec runner pki-server stop tomcat@pki --wait
      docker exec runner pki-server remove tomcat@pki
    displayName: Test PKI Server CLI
