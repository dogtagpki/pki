dn: cn=schema
attributeTypes: ( acmeExpires-oid NAME 'acmeExpires'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.24
  EQUALITY generalizedTimeMatch
  ORDERING generalizedTimeOrderingMatch
  SINGLE-VALUE )
attributeTypes: ( acmeValidatedAt-oid NAME 'acmeValidatedAt'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.24
  EQUALITY generalizedTimeMatch
  ORDERING generalizedTimeOrderingMatch
  SINGLE-VALUE )
attributeTypes: ( acmeStatus-oid NAME 'acmeStatus'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  EQUALITY caseIgnoreMatch
  SINGLE-VALUE )
attributeTypes: ( acmeError-oid NAME 'acmeError'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  SINGLE-VALUE )
attributeTypes: ( acmeNonceValue-oid NAME 'acmeNonceValue'
  SUP name
  SINGLE-VALUE )
attributeTypes: ( acmeAccountId-oid NAME 'acmeAccountId'
  SUP name
  SINGLE-VALUE )
attributeTypes: ( acmeAccountContact-oid NAME 'acmeAccountContact'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  EQUALITY caseIgnoreMatch
  SUBSTR caseIgnoreSubstringsMatch )
attributeTypes: ( acmeAccountKey-oid NAME 'acmeAccountKey'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  SINGLE-VALUE )
attributeTypes: ( acmeOrderId-oid NAME 'acmeOrderId'
  SUP name
  SINGLE-VALUE )
attributeTypes: ( acmeIdentifier-oid NAME 'acmeIdentifier'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  EQUALITY caseIgnoreMatch )
attributeTypes: ( acmeAuthorizationId-oid NAME 'acmeAuthorizationId'
  SUP name )
attributeTypes: ( acmeAuthorizationWildcard-oid NAME 'acmeAuthorizationWildcard'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.7
  EQUALITY booleanMatch
  SINGLE-VALUE )
attributeTypes: ( acmeChallengeId-oid NAME 'acmeChallengeId'
  SUP name
  SINGLE-VALUE )
attributeTypes: ( acmeToken-oid NAME 'acmeToken'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15 )
attributeTypes: ( acmeCertificateId-oid NAME 'acmeCertificateId'
  SYNTAX 1.3.6.1.4.1.1466.115.121.1.15
  EQUALITY caseExactMatch
  SINGLE-VALUE )
objectClasses: ( acmeNonce-oid NAME 'acmeNonce'
  STRUCTURAL
  MUST ( acmeNonceValue $ acmeExpires ) )
objectClasses: ( acmeAccount-oid NAME 'acmeAccount'
  STRUCTURAL
  MUST ( acmeAccountId $ acmeAccountKey $ acmeStatus )
  MAY acmeAccountContact )
objectClasses: ( acmeOrder-oid NAME 'acmeOrder'
  STRUCTURAL
  MUST ( acmeOrderId $ acmeAccountId $ acmeStatus $ acmeIdentifier $ acmeAuthorizationId )
  MAY ( acmeError $ acmeCertificateId $ acmeExpires ) )
objectClasses: ( acmeAuthorization-oid NAME 'acmeAuthorization'
  STRUCTURAL
  MUST ( acmeAuthorizationId $ acmeAccountId $ acmeIdentifier $ acmeStatus )
  MAY ( acmeExpires $ acmeAuthorizationWildcard ) )
# Why have seperate object classes for different challenge types?
# the dns-01 and http-01 challenge types both only store a 'token'.
# But challenge types could involve storing other data.  So we
# define a different object class for each challenge type, and each
# class specifies the challenge-specific attribute types.
objectClasses: ( acmeChallenge-oid NAME 'acmeChallenge'
  ABSTRACT
  MUST ( acmeChallengeId $ acmeAccountId $ acmeAuthorizationId $ acmeStatus )
  MAY ( acmeValidatedAt $ acmeError ) )
objectClasses: ( acmeChallengeDns01-oid NAME 'acmeChallengeDns01'
  SUP acmeChallenge
  STRUCTURAL
  MUST acmeToken )
objectClasses: ( acmeChallengeHttp01-oid NAME 'acmeChallengeHttp01'
  SUP acmeChallenge
  STRUCTURAL
  MUST acmeToken )
