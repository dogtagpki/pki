<!-- --- BEGIN COPYRIGHT BLOCK ---
     This program is free software; you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; version 2 of the License.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License along
     with this program; if not, write to the Free Software Foundation, Inc.,
     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

     Copyright (C) 2007 Red Hat, Inc.
     All rights reserved.
     --- END COPYRIGHT BLOCK --- -->

<SCRIPT ID=Send_OnClick type="text/JavaScript">
function myOnLoad() {
}

function performPanel() {
    var email = document.forms[0].email.value;
    var name = document.forms[0].name.value;
    var o = '$securityDomain';
    if (name == '') {
        alert("Name is empty");
        return;
    }
    if (email == '') {
        alert("Email is empty");
        return;
    }
    var dn = "cn=" + name + ",uid=admin,e="+email+",o="+o;
    document.forms[0].subject.value = dn;
    var keyGenAlg = "rsa-dual-use";
    var keyParams = null;
    if (document.forms[0].keytype.value == 'ecc') {
        keyGenAlg = "ec-dual-use";
        keyParams = "curve=nistp256"
    }

    if (navigator.appName == "Netscape" &&
      typeof(crypto.version) != "undefined") {

        crmfObject = crypto.generateCRMFRequest(
          dn, "regToken", "authenticator", null,
          "setCRMFRequest();", 2048, keyParams, keyGenAlg);
    } else {
        Send_OnClick();
    }
}

function setCRMFRequest()
{
    with (document.forms[0]) {
        cert_request.value = crmfObject.request;
        submit();
    }
}

</SCRIPT>
The administrator is a privileged user who manages this subsystem. Please enter the following relevant information, and a certificate request will be automatically generated and submitted. An administrator's entry will be created in the internal database and an administrator's certificate will be imported into this browser automatically in the next panel.
<br/>
#if ($errorString != "")
<img src="/pki/images/icon_crit_update.gif">&nbsp;<font color="red">$errorString</font>
#end
<br/>
    <br/>
                                                                                
    <table class="details">
      <tr>
        <th>UID:</th>
        <td><input type=text name=uid value="$admin_uid"></td>
      </tr>
      <tr>
        <th>Name:</th>
        <td><input size=35 type=text name=name value="$admin_name"></td>
      </tr>
      <tr>
        <th>Email:</th>
        <td><input size=35 type=text name=email value="$admin_email"></td>
      </tr>
      <tr>
        <th>Password:</th>
        <td><input type="password" size="40" name="__pwd" value="$admin_pwd" autocomplete="off"/></td>
      </tr>
      <tr>
        <th>Password (Again):</th>
                                                                              
        <td><input type="password" size="40" name="__admin_password_again" value="$admin_pwd_again" autocomplete="off"/></td>
<input type="hidden" name="cert_request" value=""/>
<input type="hidden" name="display" value=$displayStr />
<input type="hidden" name="profileId" value="caAdminCert" />
<input type="hidden" name="cert_request_type" value="crmf" />
<input type="hidden" name="import" value=$import />
<input type="hidden" name="uid" value="admin" />
<input type="hidden" name="securitydomain" value="$securityDomain" />
<input type="hidden" name="subject" value="cn=x" />
      </tr>
      <tr>
        <th>Key Type:</th>
        <td><select name="keytype"><option value="rsa">RSA</option><option value="ecc">ECC</option></select></td>
      </tr>
    </table>
                                                                                     <div align="right">
      <hr />
    </div>
