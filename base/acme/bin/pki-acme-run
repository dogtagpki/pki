#!/bin/sh -e
#
# Copyright Red Hat, Inc.
#
# SPDX-License-Identifier: GPL-2.0-or-later
#

. /usr/share/pki/scripts/config

# Allow the owner of the container (who might not be in the root group)
# to manage the config and log files.
umask 000

echo "################################################################################"

if [ ! -d /data/conf ]
then
    echo "INFO: Creating /data/conf"
    cp -r /var/lib/pki/pki-tomcat/conf.default /data/conf
    chown -Rf pkiuser:root /data/conf
    find /data/conf -type f -exec chmod +rw -- {} +
    find /data/conf -type d -exec chmod +rwx -- {} +
fi

echo "################################################################################"

echo "INFO: Creating /data/logs"
mkdir -p /data/logs
chown -Rf pkiuser:root /data/logs

echo "################################################################################"

# import metadata configuration if available
if [ -d /metadata ] && [ "$(ls /metadata)" ]
then
    echo "INFO: Importing metadata configuration"

    # empty current metadata configuration
    > /var/lib/pki/pki-tomcat/conf/acme/metadata.conf

    # import metadata configuration parameters
    for filename in /metadata/*
    do
        [ -e "$filename" ] || break
        name=$(basename $filename)
        value=$(cat $filename)
        echo "$name=$value" >> /var/lib/pki/pki-tomcat/conf/acme/metadata.conf
    done
else
    echo "INFO: Using default metadata configuration"
fi

echo "################################################################################"

# import database configuration if available
if [ -d /database ] && [ "$(ls /database)" ]
then
    echo "INFO: Importing database configuration"

    # empty current database configuration
    > /var/lib/pki/pki-tomcat/conf/acme/database.conf

    # import database configuration parameters
    for filename in /database/*
    do
        [ -e "$filename" ] || break
        name=$(basename $filename)
        value=$(cat $filename)
        echo "$name=$value" >> /var/lib/pki/pki-tomcat/conf/acme/database.conf
    done
else
    echo "INFO: Using default database configuration"
fi

echo "################################################################################"

# import issuer configuration if available
if [ -d /issuer ] && [ "$(ls /issuer)" ]
then
    echo "INFO: Importing issuer configuration"

    # empty current issuer configuration
    > /var/lib/pki/pki-tomcat/conf/acme/issuer.conf

    # import issuer configuration parameters
    for filename in /issuer/*
    do
        [ -e "$filename" ] || break
        name=$(basename $filename)
        value=$(cat $filename)
        echo "$name=$value" >> /var/lib/pki/pki-tomcat/conf/acme/issuer.conf
    done
else
    echo "INFO: Using default issuer configuration"
fi

echo "################################################################################"

# import realm configuration if available
if [ -d /realm ] && [ "$(ls /realm)" ]
then
    echo "INFO: Importing realm configuration"

    # empty current realm configuration
    > /var/lib/pki/pki-tomcat/conf/acme/realm.conf

    # import realm configuration parameters
    for filename in /realm/*
    do
        [ -e "$filename" ] || break
        name=$(basename $filename)
        value=$(cat $filename)
        echo "$name=$value" >> /var/lib/pki/pki-tomcat/conf/acme/realm.conf
    done
else
    echo "INFO: Using default realm configuration"
fi

/usr/share/pki/server/bin/pki-server-run
