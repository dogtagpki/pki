{
  "comments": [
    {
      "key": {
        "uuid": "2e6fab0b_2d7995b8",
        "filename": "base/common/src/com/netscape/certsrv/logging/AuditFile.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "A useful field might be creation/modification time - which could then be used to sort.",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7f2b118_1f29acc9",
        "filename": "base/common/src/com/netscape/certsrv/logging/AuditFile.java",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "The filename itself (except the current log) contains a timestamp (e.g. ca_audit.YYYYMMDDHHMMSS) which should provide the same sorting order as creation time. The modification time will constantly change for the current log, but will never change anymore for rotated logs (unless manually edited), so it may not be very reliable/useful.",
      "parentUuid": "2e6fab0b_2d7995b8",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84ef1675_7bed2fe3",
        "filename": "base/common/src/com/netscape/certsrv/logging/AuditResource.java",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "From a REST point of view, why is this a  POST instead of a GET?",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d60ca07a_aaa3e74e",
        "filename": "base/common/src/com/netscape/certsrv/logging/AuditResource.java",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "Yes, this can be a GET. It was copied from findAuditLogs() which must be a POST because of its parameter.",
      "parentUuid": "84ef1675_7bed2fe3",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe7c610_174ad386",
        "filename": "base/common/src/com/netscape/certsrv/logging/AuditResource.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "Given my comments in the implementation of this method, I\u0027m not I see the need for this.",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df32ee1d_ffdc3de1",
        "filename": "base/common/src/com/netscape/certsrv/logging/AuditResource.java",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "This is not really required for now since the audit files need to be downloaded for local verification, but the method can be expanded in the future to support various search filters (e.g. event type, client IP, result) in case needed by the auditor.",
      "parentUuid": "1fe7c610_174ad386",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "738e3530_46e1d75a",
        "filename": "base/java-tools/src/com/netscape/cmstools/logging/AuditFileRemoveCLI.java",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "Should we be adding this if we are not exposing this fucntionality?",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44db33dd_7d56760a",
        "filename": "base/java-tools/src/com/netscape/cmstools/logging/AuditFileRemoveCLI.java",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "cfu asked to comment out the code until we can determine the policy for purging audit logs.",
      "parentUuid": "738e3530_46e1d75a",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a871a52_20ee4e90",
        "filename": "base/server/cms/src/org/dogtagpki/server/rest/AuditService.java",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "Are the logs sorted by modifciation / creation time?\n\nSorting by name seems a little arbitrary ..",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "082759a9_d581dee4",
        "filename": "base/server/cms/src/org/dogtagpki/server/rest/AuditService.java",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "The filename contains the last modification time by the server (not by root user accidentally modifying the file), except for the current log file.\n\nThe above code is probably the simplest way to return the log filenames according to the order they were generated by the server.\n\nWe probably can change that to use the system file creation time, but the code will be a little more complicated.\n\nI\u0027d rather not use system file modification time since it can be changed by accidental modification.",
      "parentUuid": "3a871a52_20ee4e90",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "078fedd1_d1f72bed",
        "filename": "base/server/cms/src/org/dogtagpki/server/rest/AuditService.java",
        "patchSetId": 2
      },
      "lineNbr": 415,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "This seems awfully dangerous to me.  I think its OK to require auditors to get individual files, rather than stream through every audit log file ever created in that directory.\n\nMoreover, do we know that the audit verification tool works for log files that have been concatenated like this?\n\nEven if it does, are they concatenated in the right order?",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaebf873_addec9a0",
        "filename": "base/server/cms/src/org/dogtagpki/server/rest/AuditService.java",
        "patchSetId": 2
      },
      "lineNbr": 415,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "We can add max size/time limits or paging as in LDAP search if that is a concern. Regardless, the access is limited to Auditors only, and the problem is not unique to this method. There are other REST services that can be exploited for DOS attack simply by repeating the operations.\n\nThe findAuditLogs() is provided for convenience in case the auditor needs to search for logs matching certain criteria that could span across multiple log files (e.g. client IP). This is not really required right now since the search will be done locally after the auditor downloads \u0026 verifies the log files using getAuditFile().\n\nI\u0027m not sure if the audit verification tool will work with the output of findAuditLogs(), but that\u0027s not the primary purpose of this method as explained above. The getLogFiles() does return the files in the right order, so the findAuditLogs() will return all log lines in the correct order too.",
      "parentUuid": "078fedd1_d1f72bed",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dbd87ea2_4b5c083f",
        "filename": "base/server/cms/src/org/dogtagpki/server/rest/AuditService.java",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1006809
      },
      "writtenOn": "2017-04-03T19:31:09Z",
      "side": 1,
      "message": "see above.  I don\u0027t thinkwe should be streaming more than one file at a time.",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "075c112c_39739be9",
        "filename": "base/server/cms/src/org/dogtagpki/server/rest/AuditService.java",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 1010221
      },
      "writtenOn": "2017-04-03T20:15:35Z",
      "side": 1,
      "message": "See explanation above. This method is not supposed to be used for downloading the log files. This method provides a way to search audit logs on the server without downloading (and verifying) the files to the client first.",
      "parentUuid": "dbd87ea2_4b5c083f",
      "revId": "a9a41008070c5d43af5d0c70a870b48247fa16cc",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}